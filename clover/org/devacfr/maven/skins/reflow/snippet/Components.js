var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":80,"id":1858,"methods":[{"el":37,"sc":5,"sl":35},{"el":43,"sc":5,"sl":42},{"el":60,"sc":5,"sl":48},{"el":69,"sc":5,"sl":67},{"el":78,"sc":5,"sl":76}],"name":"Components","sl":26}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_4":{"methods":[{"sl":42},{"sl":48},{"sl":67}],"name":"shouldRenderNestedComponent","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":54},{"sl":55},{"sl":56},{"sl":59},{"sl":68}]},"test_49":{"methods":[{"sl":42},{"sl":48},{"sl":67}],"name":"shouldRenderCard","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":54},{"sl":55},{"sl":56},{"sl":59},{"sl":68}]},"test_57":{"methods":[{"sl":42},{"sl":48},{"sl":67}],"name":"shouldRenderCardRecursively","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":54},{"sl":55},{"sl":56},{"sl":59},{"sl":68}]},"test_59":{"methods":[{"sl":42},{"sl":48}],"name":"shouldRenderBadge","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":54},{"sl":55},{"sl":56},{"sl":59}]},"test_60":{"methods":[{"sl":42},{"sl":48},{"sl":67}],"name":"shouldReplaceSnippetByHtml","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":54},{"sl":55},{"sl":56},{"sl":59},{"sl":68}]},"test_68":{"methods":[{"sl":42},{"sl":48}],"name":"shouldRenderLayout","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":54},{"sl":55},{"sl":56},{"sl":59}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines